classDiagram
    class Recette {
        +int idRecette
        +String titre
        +List<Ingredients> ingredients
        +String consignes
        +String categorie
        +String origine
        +float noteMoyenne
    }

    class Ingredient {
        +int idIngredient
        +String nom
        +float quantite
        +String description
    }

    class Utilisateur {
        +int idUtilisateur
        +String pseudo
        +String motDePasse
        +String role
    }

    class ListeDeCourses {
        +int idListeDeCourses
        +int idUtilisateur
        +Map<Ingredient, float> Ingredientquantites
    }

    class Avis {
        +int idAvis
        +int idUtilisateur
        +int idRecette
        +float note
        +String commentaire
    }

    %% DAO and Service classes

    class RecetteDAO {
        +ajouterRecette() : bool
        +obtenirRecetteParId() : str
        +fermerConnexion() : bool
    }

    class RecetteService {
        +ajouterNouvelleRecette(Recette) : bool
        +afficherRecette() : str
        +rechercherRecettesParIngredients(List<Ingredient>) : List<Recette>
        +rechercherRecettesParLettre(str) : List<Recette>
        +suggererRecettes(List<Ingredient>, List<Ingredient>) : List<Recette>
    }

    class IngredientDAO {
        +ajouterIngredient(Ingredient) : bool
        +obtenirIngredientParId(int) : Ingredient
        +supprimerIngredient() : bool
        +obtenirTousLesIngredients() : List<Ingredient>
    }

    class IngredientService {
        +ajouterNouvelIngredient() : bool
    }

    class UtilisateurService {
        +seConnecter(str,str) : bool
        +seDeconnecter() : bool
        +creerUnCompte() : bool
        +supprimerCompte() : bool
        +pseudoDejaUtilise() : bool
        +ajouterRecetteFavorite(Recette) : bool
        +supprimerRecetteFavorite(Recette) : bool
        +obtenirRecettesFavorites() : List<Recette> 
        +ajouterIngredientFavori(Ingredient) : bool
        +supprimerIngredientFavori(Ingredient) : bool
        +obtenirIngrédientsFavoris() : List<Ingredient> 
        +ajouterIngredientNonDesire(Ingredient) : bool
        +supprimerIngredientNonDesire(Ingredient) : bool
        +obtenirIngrédientsNonDesires() : List<Ingredient> 
    }

    class UtilisateurDAO {
        +ajouterUtilisateur() : bool
        +obtenirUtilisateurParId() : Utilisateur
    }

    class ListeDeCoursesDAO {
        +ajouterListeDeCourses() : bool
        +obtenirListeParId() : ListeDeCourses
        +obtenirListeParUtilisateur(int) : ListeDeCourses
        +ajouterIngredientAListe(int, QuantiteIngredient) : bool
        +supprimerIngredientDeListe(int, int) : bool
    }

    class ListeDeCoursesService {
        +creerListeDeCourses(int) : bool
        +supprimerIngredientAchete(Ingredient, int) : bool
        +ajouterIngredients(Ingredient, int) : bool
    }

    class AvisDAO {
        +ajouterAvis() : bool
        +obtenirAvisParRecette() : List<Avis>
    }

    class AvisService {
        +ajouterNouvelAvis() : bool
        +calculerNoteMoyenne() : float
    }

    %% Relations
    RecetteService --> RecetteDAO : utilise
    RecetteDAO --> Recette : gère

    IngredientService --> IngredientDAO : utilise
    IngredientDAO --> Ingredient : gère

    UtilisateurService --> UtilisateurDAO : utilise
    UtilisateurDAO --> Utilisateur : gère

    ListeDeCoursesService --> ListeDeCoursesDAO : utilise
    ListeDeCoursesDAO --> ListeDeCourses : gère

    AvisService --> AvisDAO : utilise
    AvisDAO --> Avis : gère

    %% Cardinalities
    Utilisateur "1" --> "0..*" Recette : crée
    Utilisateur "1" --> "0..*" Avis : donne des avis
    Utilisateur "1" --> "0..1" ListeDeCourses : possède
    Recette "1.."--* "1.." Ingredient : contient
    ListeDeCourses "1.."--* "1.." Ingredient : contient
    Recette "1" --> "0..*" Avis : reçoit
